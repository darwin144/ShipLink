@using Client_Shiplink.DummyDataSavedQuotes
@using Client_Shiplink.Models.SavedQuotes
@model Client_Shiplink.Models.SavedQuotes.SavedQuote

@{
  Layout = "~/Views/Shared/_DashboardLayout.cshtml";
  var dummyDataSavedQuotes = DummyDataSavedQuotes.GetDummyData();
}
<head>
  <link href="~/css/dashboardIndex.css" rel="stylesheet" />
</head>

<style>
   .grid-column {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 10px;
}



  </style>
<div class="d-flex gap-2 w-100 h-100">
  <div class="d-flex flex-column gap-3 border rounded p-4" style="width: 100%;" id="contentOne">
    <h1>Saved Quotes</h1>
    <div class="d-flex align-items-center justify-content-between">
      <partial name="../Components/SwitchComponents" />
      <div class="d-flex gap-2">
        <partial name="../Components/SearchIconComponents" />
        <partial name="../Components/SortComponents" />
      </div>
      <button class="btn btn-red-clr">Delete</button>
    </div>
    <div>
      <div class="grid-column" id="ListOne">
        @foreach (var savedQuote in dummyDataSavedQuotes)
        {
          <div class="border rounded px-4 py-2 positin-relative shipping">
            <div class="d-flex justify-content-between">
            <div>Shipping Date :@savedQuote.ShipmentDate</div>
            <div class="form-check" style="">
    <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
  </div>
  </div>
            <div class="d-flex justify-content-between gap-4 py-2">
              <div class="d-flex flex-column">
                <h3 class="text-red-clr">From</h3>
                <h3>@savedQuote.FromAddress</h3>
                <div style="font-weight: 600;">@savedQuote.FromName | <span style="font-weight: 400;">@savedQuote.FromPhone</span></div>
                <h5 style="font-weight: 300;">@savedQuote.FromEmail</h5>
                <h5 >@savedQuote.FromStreet</h5>
              </div>
              <div class="d-flex flex-column">
                <h3 class="text-blue-clr">To</h3>
                <h3>@savedQuote.ToAddress</h3>
                <div style="font-weight: 600;">@savedQuote.ToName | <span style="font-weight: 400;">@savedQuote.ToPhone</span></div>
                <h5 style="font-weight: 300;" >@savedQuote.ToEmail</h5>
                <h5 >@savedQuote.ToStreet</h5>
              </div>
            </div>
            <div class="d-flex align-items-center justify-content-between  py-1 border-top mx-4  ">
              <div class="">
                <div>@savedQuote.Pict</div>
                <h5>@savedQuote.Size In</h5>
                <h5>@savedQuote.Weight lbs</h5>
              </div>
              <div class="border-start p-3" style="">
                <h5>@savedQuote.Parcel</h5>
                <h5 style="font-weight: 300;">@savedQuote.Day Day</h5>
              </div>
            </div>
            <div class="d-flex justify-content-end ">
              <h3>Total $@savedQuote.Total</h3>
            </div>
          </div>
        }  
      </div>
      <div class="" style="display:none;" id="ListTwo">
        @foreach (var savedQuote in dummyDataSavedQuotes)
        {
      <div class=" px-4 py-3 border rounded mt-2 shipping">
        <div class="d-flex justify-content-between ">
          <h5>Quotes Date : @savedQuote.ShipmentDate</h5>
    <div class="form-check" style="">
    <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
  </div>
        </div>
        <div class="d-flex gap-4 ">
          <div class="w-50 border-end">
            <h3><span class="text-red-clr">From </span>@savedQuote.FromName | <span style="font-weight: 300;">@savedQuote.FromPhone</span></h3>
            <div style="font-weight: 500;">@savedQuote.FromAddress, <span>@savedQuote.FromStreet</span></div>
            <h5>@savedQuote.Pict | <span>@savedQuote.Size In, </span>@savedQuote.Weight lbs</h5>
          </div>
          <div class="w-50 d-flex justify-content-between ">
            <div>
  <h3><span class="text-blue-clr">To </span>@savedQuote.ToName | <span style="font-weight: 300;">@savedQuote.ToPhone</span></h3>
            <div style="font-weight: 500;">@savedQuote.ToAddress, <span>@savedQuote.ToStreet</span></div>
          </div>
          <div>
            <div>Total</div>
            <h3>$ @savedQuote.Total</h3>
          </div>
          </div>
          </div>
        </div>
        }
        </div>
      <nav class="mt-3 d-flex justify-content-end" aria-label="Page navigation example">
        <ul class="pagination">
          <li class="page-item">
            <a class="page-link text-red-clr" href="#" aria-label="Previous">
              <span aria-hidden="true">&laquo;</span>
            </a>
          </li>
          <li class="page-item"><a class="page-link text-red-clr" href="#">1</a></li>
          <li class="page-item"><a class="page-link text-red-clr" href="#">2</a></li>
          <li class="page-item"><a class="page-link text-red-clr" href="#">3</a></li>
          <li class="page-item">
            <a class="page-link text-red-clr" href="#" aria-label="Next">
              <span aria-hidden="true">&raquo;</span>
            </a>
          </li>
        </ul>
      </nav>
    </div>
  </div>
  <div class="" style="width: 30%; height: 100%;" id="dashboardStatus">
    <partial name="../Components/DashboardStatus" />
    </div>
  <div class="" style="display: none; width: 30%; height: 100%;" id="detailShipping">
    <div>Detail Shipping</div>
    </div>
</div>
<script>
   const ListOne = document.getElementById("ListOne")
  const ListTwo = document.getElementById("ListTwo")
  const SwitchOne = document.getElementById("SwitchOne")
  const SwitcTwo = document.getElementById("SwitchTwo")

  SwitchOne.addEventListener("click", function () { 
    ListOne.style.display = "grid";
    ListTwo.style.display = "none";
  })

  SwitchTwo.addEventListener("click", function () { 
    ListOne.style.display = "none";
    ListTwo.style.display = "grid";
  })

  const dashboardStatus = document.getElementById("dashboardStatus");
  const contentOne = document.getElementById("contentOne");
  const inputNew = document.getElementById("inputNew");
  const buttonAddNew = document.getElementById("buttonAddNew");
  const cancelInput = document.getElementById("cancelInput")

  buttonAddNew.addEventListener("click", function() {
    dashboardStatus.style.display = "none";
    inputNew.style.display = "block";
    contentOne.style.width = "60%";
    document.querySelector(".grid-column").classList.add("two-columns");

  });
  cancelInput.addEventListener("click" , function () {
    dashboardStatus.style.display = "block";
    inputNew.style.display = "none";
     contentOne.style.width = "100%";
       document.querySelector(".grid-column").classList.remove("two-columns");

  })

</script>